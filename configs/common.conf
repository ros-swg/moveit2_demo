# setup secure session
new-window -n MoveItCpp
# send-keys 'export ROS_SECURITY_ENCLAVE_OVERRIDE=/gazebo' Enter
send-keys 'ros2 launch moveit2_tutorials moveit_cpp_tutorial.launch.py' Enter

split-window -h
# send-keys 'export ROS_SECURITY_ENCLAVE_OVERRIDE=/teleop' Enter
# send-keys 'ros2 run turtlebot3_teleop teleop_keyboard' Enter

split-window -v
send-keys 'ros2 topic echo /display_planned_path' Enter

# Select teleop pane
select-pane -t 1

# # create navigation window
# new-window -n navigation
# send-keys 'export ROS_SECURITY_ENCLAVE_OVERRIDE=/nav2_map' Enter
# send-keys 'ros2 launch nav2_bringup tb3_simulation_launch.py use_simulator:=False' Enter

# split-window -h
# send-keys 'configs/initial_pose.sh'

# split-window -v
# send-keys 'configs/navigate_to_pose.sh'

# # Select initial_pose pane
# select-pane -t 1

# # create mapping window
# new-window -n mapping
# send-keys 'export ROS_SECURITY_ENCLAVE_OVERRIDE=/nav2_slam' Enter
# send-keys 'ros2 launch nav2_bringup tb3_simulation_launch.py use_simulator:=False slam:=True' # Enter

# split-window -h
# send-keys 'mkdir maps' Enter
# send-keys 'ros2 run nav2_map_server map_saver_cli -f maps/my_map'

# split-window -v
# send-keys 'ros2 topic info -v /map'

# # Select slam_toolbox pane 
# select-pane -t 0

# # create sros window
# new-window -n sros
# send-keys 'tree keystore -d' Enter

# split-window -h
# send-keys 'ros2 security generate_artifacts -k keystore -p policies/tb3_gazebo_policy.xml -e /'

# split-window -v
# send-keys 'env | grep ROS' Enter

# # create rqt window
# new-window -n rqt
# send-keys 'export ROS_SECURITY_ENCLAVE_OVERRIDE=/' Enter
# send-keys 'rqt'

# # reselect turtlebot window (the one with teleop)
# select-window -t turtlebot
